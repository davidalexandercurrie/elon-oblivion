require('dotenv').config();
const AWS = require('aws-sdk');
const fs = require('fs');
const chalk = require('chalk');
const needle = require('needle');
const { exec } = require('child_process');

const token = process.env.bearer_token;

const endpointURL = 'https://api.twitter.com/2/users/44196397/tweets?';

exec(
  `clear && echo ".................   .........,,,,,,,,,,,,,,,,,,,........      ..,,,,,,,,,.......                                                                      
.......................,,,,,,,,,,,,,,,,,,.......                       ...,,,,,............  ..                                                       
....................,,,,,,,,,,.........                                           .............       . .   .                                         
..........,....,,,,,,,,,........                                                            ... ,//((((/*,..                                          
.........,,,,,,,,,,,,..........                                                              ,(#%&&&&&&%%%(.                                          
.........,,,,,,..,.............                                            ..........    .#%%&&@@@@&&%%%&@&&#.                                        
..........,,,.............                                            ...........,,,,,,,/%&&@&#/*,,,.......*&&*                                       
.........................                                     ..............,,,,,,,,,,,%&@@%**,,,,,,....,,....%#                   ,**,..*#%%%(,      
.....  ..............         .#@@@&&@/            ...................,,,,,,,,,,,,,,,,#%&&#/,,,,,,,............((                .*(%&%#&@%&&&%&*     
.....  ...........           @@@@@@@@&&&.        .................,,,,,,,,,,,,,,,,,,,.&@&&%(*,,,,*((/**,**/**,*.(                 *###((((##%#(/.     
...........,,,,......      ,@@@@@@@@@&&@@%(%@@. . .........,,,.,.,.,,,,,,,,,,,,,,,,,,,#@&&#/***/****/((*,*(((**,.                .*%&&&##&&&%(*.      
..........,,,,,,,,,,.     /&&@@@@&&&&&@&@@&&#/@(  .........,,....,.,,,,,,,,,,,,,,,,,.,.%&&%/***/**//*****,.,,,,,..            .,**(&&&%(,*#%#/.       
..........,,,.......     .&@@@@@&(%@@&&%#//#&&%@@@#,.......,,.,,,,,,,,,,,,,,,,,,,,,,,,,./%%(//*****,,,**((/(,**,,,            .*#%&@&&@&(***,,.       
....................     *@@@@@@&@@%*........*%&,........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,(/#////**********(*/*****,,..,,..       .*(((////**,          
.....................  .,&@&@&%%&%,..........,*%%........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,*/////////***//##(***/*,,*/,....          .,,,,*,..          
..................... ..&@@&&#(*(&,..,,.,,,,,,*(@........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,..**/////***//((##(*,,,,,(%(((//(/,       ....  ...,,.       
&&#,................  .,&@@@&%/,%&/(%%#((/*/(#%&@/.....,,,,,,,,,,,,,,,,,,,,,,,,(&@@&&&#.  .(**((//////****////,*/#&%(**,,*/,   .... ...  ...,,,,,.   .
%%#/................  .,#((//#((%/,/(#(/*,../(##/#......,,,,,,,,,,***,,,,,,,,,,*%@@@@@&(*,*/***/((//((###(#(/((*/@%/**///(/,   ,*/#&@@&&&&&&&&&&&&&%((
((#((/..............  ,%@(*(/*%#%*,....,,....,.*/%.......,,,,**/((#((#(*,,,,,,,,,(&@@@@@&((%@/*//((((((((///*,,,(& .**////,. ./&@&@&&&&&&&&&&&&&&&&&&&
%####%#%(.. ..........*&&@#***(%@#*,,,,,*((/*,**#&/.....,,..../%(*,,,*/,,......,..,*%%###*.   ./@#/(/(////*****#@.    .#%&@&&@&@&@&@&&&&@&&&&&&&&&&&&&
%%%%%%#%##*.*((/*.....,(&@@@@@%%#//***/######(**%@%*,.,,**.   .*##/****,............          ,..,*&@&%#%%%##@(.    ..        ./@@@@@&&&@@@@@@@@@@@@&&
&%&%%%%%%%%((//(#/..../%&@@@@@@%(/*******//*,**%@&&#/,,,.,.....,/#%(//*,........     .       ..,....,../@@@@(..      ..             /&@@@@@@@@@@@@@&&&
&&&&&&&&&&#//***//,..,#&&@@@@@@(//(((/***,,,*&@@@@@@&/,,,,,,,***(#&&&%#/,,..                .....  ...,./*..          ..                .@@@@@@@@@@&&&
&&&&@&&&&#,*////*///,/#@&@@@@@@%/**//////*,*@@@@@@@@&&***/(%%(//#&&@@@&*,             ...    . .     ...               .                    /@@@@@@@@&
&&&&@&&%#/*&&&&%%%%//(&&@@@@@@@&((////****,(@@@@@@@@&&%#///(#(/(#%%&&,.    ..... ........    . .     ...                .                    ,@@@@@@@&
#%%%%%#(//%&&&&&&&%%%%&&@@@@@&@@(#(///.. ,#@&@&@@@@@@@@&&((%&%(**///(,.. .........    ...              .                . ..**/,              @@@@@@@@
//((//%/%&&&&&&&%%%%%&@@@@@@@@%%#(//#%(/&%/%@@@@@@@@@@&@&&(#&&%#(###(,,.. .........   ...                               .. ..&.  .            ,@@@@@&&
  .,*(&&&&&&&&&(*(%@&&@&@@@@@&%#///*/(*/(//(@@@@@@@@@@&&&&&%&@@@@@@@&.,,,..,,.......   ...  ..          .               ..    .                @@@@@@@
@@/ %@@@&&&, ...*%&@@@@@@@@@&&#/*,*,*/***,**#&@@@@@@@@@@@@@@&@@@&@@@@,,,,,..,,......   ...              .                .                   . @@@@@@@
@&&&&@@@@,....,,(@&@@@@&@@@@@&(/*,..,.*/,,,(@@@@@@@@@@@@@&@@(%&&&&@@@/,,,,,.,,,......  ...   ...                         .         ..,.... .   @@@@@@@
&&&&&&&&(...,,,/#@&@&@@@@@@&&(//*,,,,,...,,(@@@@&@@@@@@@@@@@&%&&&&&@@,*,,,,,,,,...........    ...                        .       .......       @@@@@@@
@@@@@&@@/...,,,/%@@@@@@&@&#&%#*,,.,.......,#%@&%(%@&&&@@&@@@@&&%#%%&@,,,,,,,.,,...........    ...       ..              ..               ..    (@@@@@@
@@@@@@@@*..,,,,(&@&@@@@@/,%%*,..........,*(%@&&*,*#%&&%&&&@@@@&&(#&&@..,,,,,,,,............  .....       ..       ..   ...        ..    ....   .*&@@@@
@@@@@@@@*..,,,*(&&@@@@&@(%&/,.   .. ....,*%@%%...../&#(%%&@@&@@&#%%%/.,,,,.,,,,,,.,,,,.............       .       ......,.. ............ ...    ..*&@@
@@@@@@@@*,,,,,*(%@@@@&%&(%&*,.. ..... ...*/&&(..  .,,#/#(%&@@@@&#((/..,,,,,,,,*,,,,,,,,.,........... ..   .     .   ..... ..................    ....*&
@@@@@@@@#,,,,,*(%@@@@&%&##&/*,,,,,.,,... .,#%. . ..,*/#((#&@@@%@&%%%.,,,,,,,,,,**,,,,,,,,,,,........ ...  .         ..........................   .,.,*
@@@@@@@@%,.,,,*(%%@@&%%&(%(/,**,,,,*,,,,...%,...,,,,,*///%&@@&@@&&&/.,,,,,,,,,,****,,,,..,,,.............  .        .........................    .,,*#
@@@@@@@@&&%%%&&&@@@@@%#&#(//*****,,,,,,,,.,/*,.,,,,,,*//%@&@@@&&&&%,.,,,,,,,.,,,/***,,,.....,.........  .. .    ... ..........................    @@@@
@@@@@@@@@@&&&&&&@@@@@&##/*////******,,,,,,.,,,,,,,,,,*,*%@@@@&@&&&#,,,,,,,,,,,,*///*,,,......,......... ....    ..................................*@@@
@@@@@@@@&&&&%&%%&@@@@@(##(/*****,*/,,,.,..,...,.,,*,,,*,@@@&&&&&%%(,*,,,,,,.,,,**/#**,,,..,,,.,,........  ... .  ..,...................,,,,,,...   @@@
@@@@@@@@&&&%%%%%%@@@@@&##///**/***/***,,,,,,,,*,,,,,***/@@&&&&&&%&**,,,,,,,,,,***//**,,,,,,,,..,,............... .....................,,.....      %@@"`,
  (error, stdout, stderr) => {
    if (error) {
      console.log(`error: ${error.message}`);
      return;
    }
    if (stderr) {
      console.log(`stderr: ${stderr}`);
      return;
    }
    console.log(`${stdout}`);
  }
);

async function getRequest() {
  // These are the parameters for the API request
  // specify Tweet IDs to fetch, and any additional fields that are required
  // by default, only the Tweet ID and text are returned
  const params = {
    max_results: 40,
  };

  // this is the HTTP header that adds bearer token authentication
  const res = await needle('get', endpointURL, params, {
    headers: {
      'User-Agent': 'v2TweetLookupJS',
      authorization: `Bearer ${token}`,
    },
  });

  if (res.body) {
    console.log(
      chalk.green(`Receiving Elon's last ${params.max_results} Tweets`)
    );
    return res.body;
  } else {
    throw new Error('Unsuccessful request');
  }
}

(async () => {
  try {
    // Make request
    const response = await getRequest();
    let tweetString = '';
    const tweetWordTimings = response.data.map(obj => obj.text);
    tweetString = tweetWordTimings.join(' ');

    runPolly(tweetString);
  } catch (e) {
    console.log(e);
    process.exit(-1);
  }
  // process.exit();
})();

const runPolly = (text, words) => {
  console.log(chalk.magenta(`Got the tweets! Making a request to Polly TTS`));
  const Polly = new AWS.Polly({
    region: 'us-east-1',
  });
  const voiceID = 'Joey';
  const input = {
    text: {
      Text: text,
      OutputFormat: 'json',
      VoiceId: voiceID,
      SpeechMarkTypes: ['word'],
    },
    audio: {
      Text: text,
      OutputFormat: 'mp3',
      VoiceId: voiceID,
    },
  };
  Polly.synthesizeSpeech(input.text, (err, data) => {
    if (err) {
      console.log(err);
      return;
    }
    const arr = [];
    if (data.AudioStream instanceof Buffer) {
      const buf = Buffer.from(data.AudioStream);
      const content = buf.toString();
      const lines = content.split('\n');
      if (!lines[lines.length - 1]) {
        lines.pop();
      }
      for (line of lines) {
        const obj = JSON.parse(line);
        arr.push(obj);
      }
      let timings = '';
      let words = '';
      for (element of arr) {
        timings += `${element.time} `;
        words += `${element.value} `;
      }
      fs.writeFileSync('elon.txt', timings);
      fs.writeFileSync('words.txt', words);
    }
  });

  Polly.synthesizeSpeech(input.audio, (err, data) => {
    if (err) {
      console.log(err);
      return;
    }
    if (data.AudioStream instanceof Buffer) {
      fs.writeFile('elon.mp3', data.AudioStream, err => {
        if (err) {
          console.log(err);
          return;
        }

        onSuccess();
      });
    }
  });
};

const onSuccess = () => {
  console.log(chalk.red('Received mp3... converting to .wav'));
  exec(
    "figlet -w 9999 -f jazmine '                   ELON     OBLIVION              ' ",
    (error, stdout, stderr) => {
      if (error) {
        console.log(`error: ${error.message}`);
        return;
      }
      if (stderr) {
        console.log(`stderr: ${stderr}`);
        return;
      }
      console.log(`${stdout}`);
    }
  );
  // exec(
  //   'ffmpeg -loglevel quiet -i elon.mp3 -y elon.wav && chuck --dac8 patch.ck',
  //   (error, stdout, stderr) => {
  //     if (error) {
  //       console.log(`error: ${error.message}`);
  //       return;
  //     }
  //     if (stderr) {
  //       console.log(`stderr: ${stderr}`);
  //       return;
  //     }
  //     console.log(`${stdout}`);
  //   }
  // );
};
